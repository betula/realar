
func mem_alloc(size) result
  if mem_has_free_place(2)
    ptr = mem_alloc_free_place(2)
  else
    ptr = mem_tail_n_inc(2)

  [ptr + 1] = size

  if mem_has_free_place(size)
    [ptr] = mem_alloc_free_place(size)
  else
    [ptr] = mem_tail_n_inc(size)

  ptr

func mem_size(ptr) result
  [ptr + 1] # size

func mem_free(ptr)

func mem_x4(ptr)

func mem_has_free_place(size) result
  map = mem_map()
  if !map # beginning phase
    res = 0
  else
    res = 0
  res

func mem_alloc_free_place(size) result
  0

func mem_map result
  [[MEM]] # zero index pointer in memory block - map of sizes -> pointers

func mem_init
  mem_ptr = mem_tail_n_inc(1)
  [MEM] = mem_ptr
  [mem_ptr] = 0 # map_create() # Map of free memory block. size => [ptr, ...]
