
# memory struct
# 0 index - code array type ADT_ARR_TYPE
# 1 index - length (push, pop)

func arr_create result
  ptr = mem_alloc(32)  # Array default memory size block 32 -> 30 elements
  [ptr] = ADT_ARR_TYPE # type
  [ptr + 1] = 0        # length
  ptr + 2

func arr_len(id) result
  [id - 1]             # length

func arr_len_inc(id)
  [id - 1] = [id - 1] + 1

func arr_len_dec(id)
  [id - 1] = [id - 1] - 1

func arr_push(id n)
  len = arr_len(id)
  arr_len_inc(id)
  [id + len] = n

func arr_pop(id) result
  len = arr_len(id)
  if !len
    res = 0
  else
    res = [id + len - 1]
    arr_len_dec(id)
  res

func arr_delete(id index)
  len = arr_len(id)
  if index < len
    if index < len - 1
      mem_copy(id + index, id + index + 1, len - index - 1)
    arr_len_dec(id)

func arr_free(id)

