
# memory struct
# 0 - code array type ADT_SET_TYPE
# 1 - size
# [2..size) - values

func set_create result
  id = mem_alloc(16)    # Set default memory size block 16 -> 14 elements
  [id] = ADT_SET_TYPE
  [id + 1] = 0          # 1 index - size of set
  id + 2

func set_add(id n)
  size = set_size(id)
  i = set_search(id, n)
  if i == size
    set_insert_i(id, i, n)
  else
    i_n = set_get_i(id, i)
    if n != i_n
      set_insert_i(id, i, n)


func set_size(id) result
  [id - 1]

func set_size_inc(id)
  [id - 1] = [id - 1] + 1

func set_size_dec(id)
  [id - 1] = [id - 1] - 1

func set_insert_i(id index n)
  size = set_size(id)
  offset = id + index
  if index != size
    mem_copy(offset + 1, offset, size - index)

  [offset] = n
  set_size_inc(id)


func set_delete_i(id index)
  size = set_size(id)
  if size != 1
    offset = id + index
    mem_copy(offset, offset + 1, size - index - 1)
  set_size_dec(id)


func set_get_i(id index) result
  [id + index]

func set_search(id n) result
  size = set_size(id)
  offset = 0
  if !size
    res = 0
  else
    loop $loop
      b = size >> 1 ;; size / 2
      a = size - b

      # left:a:(+1-0) | right:b
      half = offset + a
      half_index = half - 1

      half_n = set_get_i(id, half_index)

      if n > half_n
        if !b
          res = half
        else
          offset = offset + a
          size = a
          br $loop
      else
        if n != half_n
          if size == 1
            res = half_index
          else
            size = a
            br $loop
        else res = half_index
  res


func set_has(id n) result
  size = set_size(id)
  if !size
    res = 0
  else
    i = set_search(id, n)
    if i == size
      res = 0
    else
      i_n = set_get_i(id, i)
      if n == i_n
        res = 1
      else res = 0
  res


func set_delete(id n) result
  size = set_size(id)
  if !size
    res = 0
  else
    i = set_search(id, n)
    if i == size
      res = 0
    else
      i_n = set_get_i(id, i)
      if n != i_n
        res = 0
      else
        set_delete_i(id, i)
        res = 1
  res

func set_free(id)

